/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package phoneplan;

//imports
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * @author Ruby Lennon
 * 3rd January 2021
 * Student Number: x19128355
 * PhonePlanUI.java
 */

//GUI Class
//@Reference: https://www.youtube.com/watch?v=6TIS-GmrQV8 (GUI form tutorial)
public class PhonePlanUI extends javax.swing.JFrame {
    //declare variables
    String planName, freeCallOfferIncluded, dataAllowance;
    int numberMinutes, numberTexts, internationalMinutes;
    
    //declare ArrayList
    private ArrayList <PhonePlan> plans;

    /**
     * Creates new form PhonePlanUI
     */
    //constructor
    public PhonePlanUI() {
        //initialize components
        initComponents();
        //initialize ArrayList "plans"
        plans = new ArrayList<>();
        //initialize variables
        planName = new String();
        freeCallOfferIncluded = new String();
        dataAllowance = new String();
        numberMinutes = 0;
        numberTexts = 0;
        internationalMinutes = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLbl = new javax.swing.JLabel();
        addMobilePhonePlanBtn = new javax.swing.JButton();
        displayBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        saveMobilePhonePlanBtn = new javax.swing.JButton();
        readBtn = new javax.swing.JButton();
        planNameLbl = new javax.swing.JLabel();
        planNameTf = new javax.swing.JTextField();
        numberMinutesLbl = new javax.swing.JLabel();
        numberMinutesTf = new javax.swing.JTextField();
        freeCallOfferIncludedLbl = new javax.swing.JLabel();
        freeCallOfferIncludedTf = new javax.swing.JTextField();
        AddHomePhonePlanBtn = new javax.swing.JButton();
        numberTextsLbl = new javax.swing.JLabel();
        dataAllowanceLbl = new javax.swing.JLabel();
        internationalMinutesLbl = new javax.swing.JLabel();
        dataAllowanceTf = new javax.swing.JTextField();
        internationalMinutesTf = new javax.swing.JTextField();
        numberTextsTf = new javax.swing.JTextField();
        logoOneLbl = new javax.swing.JLabel();
        logoTwoLbl = new javax.swing.JLabel();
        clearTextBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLbl.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        titleLbl.setText("Phone Plan Application");

        addMobilePhonePlanBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addMobilePhonePlanBtn.setText("Add New Mobile Phone Plan");
        addMobilePhonePlanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMobilePhonePlanBtnActionPerformed(evt);
            }
        });

        displayBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        displayBtn.setText("Display All Plans");
        displayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteBtn.setText("Delete by Plan Name");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchBtn.setText("Search By Plan Name");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        saveMobilePhonePlanBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        saveMobilePhonePlanBtn.setText("Save All Plans to File");
        saveMobilePhonePlanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMobilePhonePlanBtnActionPerformed(evt);
            }
        });

        readBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        readBtn.setText("Load All Saved");
        readBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readBtnActionPerformed(evt);
            }
        });

        planNameLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        planNameLbl.setText("Plan Name:");

        numberMinutesLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        numberMinutesLbl.setText("Number of Minutes:");

        freeCallOfferIncludedLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        freeCallOfferIncludedLbl.setText("Free Call Offers Included:");

        AddHomePhonePlanBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddHomePhonePlanBtn.setText("Add New Home Phone Plan");
        AddHomePhonePlanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddHomePhonePlanBtnActionPerformed(evt);
            }
        });

        numberTextsLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        numberTextsLbl.setText("Number of Texts (Mobile Phone Plan):");

        dataAllowanceLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dataAllowanceLbl.setText("Data Allowance (Mobile Phone Plan):");

        internationalMinutesLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        internationalMinutesLbl.setText("International Call Minutes (Home Phone Plan):");

        logoOneLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/phoneplan/telephone.png"))); // NOI18N

        logoTwoLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/phoneplan/smartphone.png"))); // NOI18N

        clearTextBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        clearTextBtn.setText("Clear All Text");
        clearTextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearTextBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(internationalMinutesLbl)
                            .addComponent(dataAllowanceLbl)
                            .addComponent(numberTextsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(dataAllowanceTf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                            .addComponent(internationalMinutesTf)
                            .addComponent(numberTextsTf, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(numberMinutesLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(freeCallOfferIncludedLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(218, 218, 218)
                                .addComponent(planNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(planNameTf)
                            .addComponent(freeCallOfferIncludedTf)
                            .addComponent(numberMinutesTf, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addMobilePhonePlanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(saveMobilePhonePlanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(logoTwoLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(displayBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AddHomePhonePlanBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(readBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearTextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65)
                        .addComponent(logoOneLbl)))
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleLbl)
                .addGap(291, 291, 291))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(titleLbl)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planNameLbl)
                    .addComponent(planNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberMinutesLbl)
                    .addComponent(numberMinutesTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freeCallOfferIncludedTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(freeCallOfferIncludedLbl))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberTextsTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberTextsLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dataAllowanceLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(dataAllowanceTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(internationalMinutesTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(internationalMinutesLbl)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMobilePhonePlanBtn)
                    .addComponent(AddHomePhonePlanBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteBtn)
                            .addComponent(searchBtn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(displayBtn)
                            .addComponent(clearTextBtn)))
                    .addComponent(logoTwoLbl)
                    .addComponent(logoOneLbl))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(readBtn)
                    .addComponent(saveMobilePhonePlanBtn))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //@Reference: https://www.youtube.com/watch?v=6TIS-GmrQV8 (add button functionality tutorial)
    //"Add New Mobile Phone Plan" button functionality - adds new object to array using user input
    private void addMobilePhonePlanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMobilePhonePlanBtnActionPerformed
        
        //if statement - checks if the required text fields contain text
        if(freeCallOfferIncludedTf.getText().equals("")||planNameTf.getText().equals("")||dataAllowanceTf.getText().equals("")||numberTextsTf.getText().equals("")||numberMinutesTf.getText().equals("")){
            //if text is missing in the required text fields the user is alerted
            JOptionPane.showMessageDialog(null, "Please enter all required details.");
        } else {
            //execute the following code if text is present in text fields
            try{

            //get text from textfields
            planName = planNameTf.getText();
            numberMinutes = Integer.parseInt(numberMinutesTf.getText());
            freeCallOfferIncluded = freeCallOfferIncludedTf.getText();
            numberTexts = Integer.parseInt(numberTextsTf.getText());
            dataAllowance = dataAllowanceTf.getText();

            //create a new instance of MobilePhonePlan "mpp"
            MobilePhonePlan mpp = new MobilePhonePlan();

            //set the user input data to the variables in the object
            mpp.setPlanName(planName);
            mpp.setNumberMin(numberMinutes);
            mpp.setFreeCallOfferIncluded(freeCallOfferIncluded);
            mpp.setNumberTexts(numberTexts);
            mpp.setDataAllowance(dataAllowance);

            //add the object to the ArrayList
            plans.add(mpp);

            //print
            JOptionPane.showMessageDialog(null,planName + " successfully added.");

            //clear textfield text
            clearText();
            
            //@Reference: https://web.microsoftstream.com/video/48aaa530-ecae-4da2-8ffd-ba668e3ae0c6?list=user&userId=27af0874-f9ef-4f33-b1dd-0f3f7ec905b5 (OOP Exceptions Lecture)
            //error handling and exceptions
            //alerts user if they have not entered valid numbers for certain textfields
            }catch(NumberFormatException n){
                JOptionPane.showMessageDialog(null, "Save unsuccessful, please ensure you have entered a valid number for the following:\nNumber of minutes\nNumber of texts");
            }catch(Exception n){
                //alerts user of any other error resulting in the plan not being saved 
                JOptionPane.showMessageDialog(null, "An error has occurred, and the operation was not successful. Please try again.");
            }
        }       
    }//GEN-LAST:event_addMobilePhonePlanBtnActionPerformed
    
    //@Reference: https://www.youtube.com/watch?v=6TIS-GmrQV8 (display button tutorial)
    //"Display All Plans" button functionality - displays all plans in ArrayList
    private void displayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBtnActionPerformed
        
        //if there are no objects in ArrayList
        if (plans.isEmpty()){
            //print the following
            JOptionPane.showMessageDialog(null, "There are no plans to display.");
        }
        //if there are objects in the ArrayList
        else {
        
            //loop through every object in the ArrayList
            for (int i = 0; i < plans.size(); i++) {
                PhonePlan p = plans.get(i);
                //@Reference: https://howtodoinjava.com/java/oops/java-instanceof/ (How to use Instanceof tutorial)
                //if it is an instance of MobilePhonePlan
                if (p instanceof MobilePhonePlan) {
                    //print the following
                    JOptionPane.showMessageDialog(null,"Plan name: "+p.getPlanName()+"\nNumber of minutes: "+p.getNumberMin()+"\nFree call offer: "+p.getFreeCallOfferIncluded()+"\nNumber of texts: "+((MobilePhonePlan) p).getNumberTexts()+"\nData Allowance: "+((MobilePhonePlan) p).getDataAllowance());
                }
                //if it is an instance of HomePhonePlan
                else if (p instanceof HomePhonePlan){
                    //print the following
                    JOptionPane.showMessageDialog(null,"Plan name: "+p.getPlanName()+"\nNumber of minutes: "+p.getNumberMin()+"\nFree call offer: "+p.getFreeCallOfferIncluded()+"\nInternational minutes: "+((HomePhonePlan) p).getInternationalMinutes());                
                }
            }
        }
    }//GEN-LAST:event_displayBtnActionPerformed
    
    //@Reference: https://www.youtube.com/watch?v=ggAI91OPSgs (search button tutorial)
    //"Search By Plan Name" button functionality - allows user to search for a plan by "Plan Name"
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        
        //if there are no objects in ArrayList
        if (plans.isEmpty()){
            //print the following
            JOptionPane.showMessageDialog(null, "There are no plans to search for.");
        } 
        //if there are objects in the ArrayList
        else {
            //promtps user to set a search term
            String searchTerm = JOptionPane.showInputDialog(null, "Please enter a plan name to search for:");
            
            //loop through every object in the ArrayList
            for (int i = 0; i < plans.size(); i++) {
                PhonePlan p = plans.get(i);
                //@Reference: https://howtodoinjava.com/java/oops/java-instanceof/ (How to use Instanceof tutorial)
                //if search term equals the object plan name attribute
                if (p.getPlanName().equalsIgnoreCase(searchTerm)) {
                    //and if the object is an instance of MobilePhonePlan
                    if (p instanceof MobilePhonePlan) {
                        //print the following
                        JOptionPane.showMessageDialog(null,"Plan name: "+p.getPlanName()+"\nNumber of minutes: "+p.getNumberMin()+"\nFree call offer: "+p.getFreeCallOfferIncluded()+"\nNumber of texts: "+((MobilePhonePlan) p).getNumberTexts()+"\nData Allowance: "+((MobilePhonePlan) p).getDataAllowance());
                    }
                    //and if the object is an instance of HomePhonePlan
                    else if (p instanceof HomePhonePlan){
                        //print the following
                        JOptionPane.showMessageDialog(null,"Plan name: "+p.getPlanName()+"\nNumber of minutes: "+p.getNumberMin()+"\nFree call offer: "+p.getFreeCallOfferIncluded()+"\nInternational minutes: "+((HomePhonePlan) p).getInternationalMinutes());                
                    }
                }
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    //**Additional Functionality - No. 3 Delete an item according to an attribute of your choosing**
    //chosen attribute to delete item by = planName
    //@Reference:  https://www.youtube.com/watch?v=HaFPDfhxy0M (delete button tutorial)
    //"Delete By Plan Name" button functionality - allows user to search for a plan by "Plan Name"
    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        //if there are no objects in ArrayList
        if (plans.isEmpty()){
            //print the following
            JOptionPane.showMessageDialog(null, "There are no plans to delete.");
        } else {
            //chosen attribute to delete item by = planName
            //promtps user to set a delete term to delete plan by
            String deleteTerm = JOptionPane.showInputDialog(null, "Please enter a plan name to delete:");
            //loop through every object in the ArrayList
            for (int i = 0; i < plans.size(); i++) {
                PhonePlan p = plans.get(i);
                //if search term equals the object plan name attribute
                if(p.getPlanName().equalsIgnoreCase(deleteTerm)){
                    //if so - remove the plan from the ArrayList
                    plans.remove(p);
                    //message printed to user confirming deletion
                    JOptionPane.showMessageDialog(null,deleteTerm + " successfully deleted.");
                }
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed
    
    //@Reference: https://www.youtube.com/watch?v=6TIS-GmrQV8 (add button tutorial)
    //"Add New Home Phone Plan" button functionality - adds new object to array using user input
    private void AddHomePhonePlanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddHomePhonePlanBtnActionPerformed
        
        //if statement - checks if the required text fields contain text
        if(planNameTf.getText().equals("")||freeCallOfferIncludedTf.getText().equals("")||internationalMinutesTf.getText().equals("")||numberMinutesTf.getText().equals("")){
            //if text is missing in the required text fields the user is alerted
            JOptionPane.showMessageDialog(null, "Please enter all required details.");
        } else {
            //execute the following code if text is present in text fields
            try{
                //if text is present in text fields
                //get text from textfields
                planName = planNameTf.getText();
                numberMinutes = Integer.parseInt(numberMinutesTf.getText());
                freeCallOfferIncluded = freeCallOfferIncludedTf.getText();
                internationalMinutes = Integer.parseInt(internationalMinutesTf.getText());

                //create a new instance of HomePhonePlan "hpp"
                HomePhonePlan hpp = new HomePhonePlan();

                //set the user input data to the variables in the object
                hpp.setPlanName(planName);
                hpp.setNumberMin(numberMinutes);
                hpp.setFreeCallOfferIncluded(freeCallOfferIncluded);
                hpp.setInternationalMinutes(internationalMinutes);

                //add the object to the ArrayList
                plans.add(hpp);

                //print
                JOptionPane.showMessageDialog(null,planName + " successfully added.");

                //clear textfield text
                clearText();
            
            //@Reference: https://web.microsoftstream.com/video/48aaa530-ecae-4da2-8ffd-ba668e3ae0c6?list=user&userId=27af0874-f9ef-4f33-b1dd-0f3f7ec905b5 (OOP Exceptions Lecture)
            //error handling and exceptions
            //alerts user if they have not entered valid numbers for certain textfields                
            }catch(NumberFormatException n){
                JOptionPane.showMessageDialog(null, "Save unsuccessful, please ensure you have entered a valid number for the following:\nNumber of minutes\nInternational minutes");
            }catch(Exception n){
                //alerts user of any other error resulting in the plan not being saved 
                JOptionPane.showMessageDialog(null, "An error has occurred, and the operation was not successful. Please try again.");
            }                  
        }        
    }//GEN-LAST:event_AddHomePhonePlanBtnActionPerformed
    
    //@Reference: https://www.youtube.com/watch?v=3U-U8S-aAr4 (file I/O tutorial)
    //@Reference: https://www.youtube.com/watch?v=Y1vmdMYbwIg (file I/O tutorial)
    //"Save All Plans" button functionality - allows user to save all plans created in current app instance to a file
    private void saveMobilePhonePlanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMobilePhonePlanBtnActionPerformed
       
        //create instances of classes
        File f;
        FileOutputStream fStream;
        ObjectOutputStream oStream;
        
        try{
            //create new instances
            f = new File("output.data");
            fStream = new FileOutputStream(f);
            oStream = new ObjectOutputStream(fStream);           
            
            //print
            JOptionPane.showMessageDialog(null,"File written successfully.");
            
            //write all plan objects to file
            oStream.writeObject(plans);
            //close stream
            oStream.close();
        } //if error catch
        catch(IOException e){
            System.out.println(e);
        }
    }//GEN-LAST:event_saveMobilePhonePlanBtnActionPerformed
    
    //@Reference: https://www.youtube.com/watch?v=XSSSUylT8wk (file I/O tutorial)
    //@Reference: https://www.youtube.com/watch?v=O1TKyaJFlBE (file I/O tutorial)
    //"Load All Saved" button functionality - allows user to load all saved plans in file to application
    private void readBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readBtnActionPerformed
        
        //create instances of classes
        File f;
        FileInputStream fStream;
        ObjectInputStream oStream;
        
        try{
            //create new instances
            f = new File("output.data");
            fStream = new FileInputStream(f);
            oStream = new ObjectInputStream(fStream);           
            
            plans = (ArrayList<PhonePlan>)oStream.readObject();
            
            //print
            JOptionPane.showMessageDialog(null,"File loaded successfully.");
            
            //close stream
            oStream.close();
        } //if error catch
        catch(IOException |ClassNotFoundException e){
            System.out.println(e);
        }
    }//GEN-LAST:event_readBtnActionPerformed
    
    //clear all textfield text
    private void clearText() {                                         
        //sets text fields to empty clearing any text
        planNameTf.setText("");
        numberMinutesTf.setText("");
        freeCallOfferIncludedTf.setText("");
        numberTextsTf.setText("");
        dataAllowanceTf.setText("");
        internationalMinutesTf.setText("");
        
    }  
    
    //"Clear All Text" button functionality - clears all text from text fields on UI Form
    private void clearTextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearTextBtnActionPerformed
        //sets text fields to empty clearing any text
       clearText(); 
    }//GEN-LAST:event_clearTextBtnActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhonePlanUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhonePlanUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhonePlanUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhonePlanUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhonePlanUI().setVisible(true);
            }
        });
    }
    
/*Logo References:
 * smartphone.png @Ref: https://www.flaticon.com/authors/those-icons
 * telephone.png @Ref: :https://www.flaticon.com/authors/those-icons
 */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddHomePhonePlanBtn;
    private javax.swing.JButton addMobilePhonePlanBtn;
    private javax.swing.JButton clearTextBtn;
    private javax.swing.JLabel dataAllowanceLbl;
    private javax.swing.JTextField dataAllowanceTf;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton displayBtn;
    private javax.swing.JLabel freeCallOfferIncludedLbl;
    private javax.swing.JTextField freeCallOfferIncludedTf;
    private javax.swing.JLabel internationalMinutesLbl;
    private javax.swing.JTextField internationalMinutesTf;
    private javax.swing.JLabel logoOneLbl;
    private javax.swing.JLabel logoTwoLbl;
    private javax.swing.JLabel numberMinutesLbl;
    private javax.swing.JTextField numberMinutesTf;
    private javax.swing.JLabel numberTextsLbl;
    private javax.swing.JTextField numberTextsTf;
    private javax.swing.JLabel planNameLbl;
    private javax.swing.JTextField planNameTf;
    private javax.swing.JButton readBtn;
    private javax.swing.JButton saveMobilePhonePlanBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel titleLbl;
    // End of variables declaration//GEN-END:variables
}
